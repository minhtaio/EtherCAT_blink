ARM GAS  C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.section	.rodata.str1.4,"aMS",%progbits,1
  17              		.align	2
  18              	.LC0:
  19 0000 64656661 		.ascii	"defaultTask\000"
  19      756C7454 
  19      61736B00 
  20              		.align	2
  21              	.LC2:
  22 000c 61707054 		.ascii	"appTestTask\000"
  22      65737454 
  22      61736B00 
  23              		.text
  24              	.Ltext0:
  25              		.cfi_sections	.debug_frame
  26              		.section	.text.StartDefaultTask,"ax",%progbits
  27              		.align	1
  28              		.global	StartDefaultTask
  29              		.syntax unified
  30              		.thumb
  31              		.thumb_func
  33              	StartDefaultTask:
  34              	.LFB144:
  35              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
ARM GAS  C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s 			page 2


  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** 
  29:Core/Src/freertos.c **** #include "appTest_tmc8462a.h"
  30:Core/Src/freertos.c **** 
  31:Core/Src/freertos.c **** /* USER CODE END Includes */
  32:Core/Src/freertos.c **** 
  33:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* USER CODE END PTD */
  37:Core/Src/freertos.c **** 
  38:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* USER CODE END PD */
  42:Core/Src/freertos.c **** 
  43:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* USER CODE END PM */
  47:Core/Src/freertos.c **** 
  48:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  50:Core/Src/freertos.c **** osThreadId appTestTaskHandle;
  51:Core/Src/freertos.c **** /* USER CODE END Variables */
  52:Core/Src/freertos.c **** osThreadId defaultTaskHandle;
  53:Core/Src/freertos.c **** 
  54:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  56:Core/Src/freertos.c **** 
  57:Core/Src/freertos.c **** void testTask (void const * arg);
  58:Core/Src/freertos.c **** 
  59:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  60:Core/Src/freertos.c **** 
  61:Core/Src/freertos.c **** void StartDefaultTask(void const * argument);
  62:Core/Src/freertos.c **** 
  63:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  64:Core/Src/freertos.c **** 
  65:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  66:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  67:Core/Src/freertos.c **** 
  68:Core/Src/freertos.c **** /* GetTimerTaskMemory prototype (linked to static allocation support) */
  69:Core/Src/freertos.c **** void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTa
  70:Core/Src/freertos.c **** 
  71:Core/Src/freertos.c **** /* Hook prototypes */
  72:Core/Src/freertos.c **** void configureTimerForRunTimeStats(void);
  73:Core/Src/freertos.c **** unsigned long getRunTimeCounterValue(void);
  74:Core/Src/freertos.c **** void vApplicationIdleHook(void);
  75:Core/Src/freertos.c **** void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName);
  76:Core/Src/freertos.c **** 
ARM GAS  C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s 			page 3


  77:Core/Src/freertos.c **** /* USER CODE BEGIN 1 */
  78:Core/Src/freertos.c **** /* Functions needed when configGENERATE_RUN_TIME_STATS is on */
  79:Core/Src/freertos.c **** __weak void configureTimerForRunTimeStats(void)
  80:Core/Src/freertos.c **** {
  81:Core/Src/freertos.c **** 
  82:Core/Src/freertos.c **** }
  83:Core/Src/freertos.c **** 
  84:Core/Src/freertos.c **** __weak unsigned long getRunTimeCounterValue(void)
  85:Core/Src/freertos.c **** {
  86:Core/Src/freertos.c **** return 0;
  87:Core/Src/freertos.c **** }
  88:Core/Src/freertos.c **** /* USER CODE END 1 */
  89:Core/Src/freertos.c **** 
  90:Core/Src/freertos.c **** /* USER CODE BEGIN 2 */
  91:Core/Src/freertos.c **** __weak void vApplicationIdleHook( void )
  92:Core/Src/freertos.c **** {
  93:Core/Src/freertos.c ****    /* vApplicationIdleHook() will only be called if configUSE_IDLE_HOOK is set
  94:Core/Src/freertos.c ****    to 1 in FreeRTOSConfig.h. It will be called on each iteration of the idle
  95:Core/Src/freertos.c ****    task. It is essential that code added to this hook function never attempts
  96:Core/Src/freertos.c ****    to block in any way (for example, call xQueueReceive() with a block time
  97:Core/Src/freertos.c ****    specified, or call vTaskDelay()). If the application makes use of the
  98:Core/Src/freertos.c ****    vTaskDelete() API function (as this demo application does) then it is also
  99:Core/Src/freertos.c ****    important that vApplicationIdleHook() is permitted to return to its calling
 100:Core/Src/freertos.c ****    function, because it is the responsibility of the idle task to clean up
 101:Core/Src/freertos.c ****    memory allocated by the kernel to any task that has since been deleted. */
 102:Core/Src/freertos.c **** }
 103:Core/Src/freertos.c **** /* USER CODE END 2 */
 104:Core/Src/freertos.c **** 
 105:Core/Src/freertos.c **** /* USER CODE BEGIN 4 */
 106:Core/Src/freertos.c **** __weak void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName)
 107:Core/Src/freertos.c **** {
 108:Core/Src/freertos.c ****    /* Run time stack overflow checking is performed if
 109:Core/Src/freertos.c ****    configCHECK_FOR_STACK_OVERFLOW is defined to 1 or 2. This hook function is
 110:Core/Src/freertos.c ****    called if a stack overflow is detected. */
 111:Core/Src/freertos.c **** }
 112:Core/Src/freertos.c **** /* USER CODE END 4 */
 113:Core/Src/freertos.c **** 
 114:Core/Src/freertos.c **** /* USER CODE BEGIN PREPOSTSLEEP */
 115:Core/Src/freertos.c **** __weak void PreSleepProcessing(uint32_t ulExpectedIdleTime)
 116:Core/Src/freertos.c **** {
 117:Core/Src/freertos.c **** /* place for user code */
 118:Core/Src/freertos.c **** }
 119:Core/Src/freertos.c **** 
 120:Core/Src/freertos.c **** __weak void PostSleepProcessing(uint32_t ulExpectedIdleTime)
 121:Core/Src/freertos.c **** {
 122:Core/Src/freertos.c **** /* place for user code */
 123:Core/Src/freertos.c **** }
 124:Core/Src/freertos.c **** /* USER CODE END PREPOSTSLEEP */
 125:Core/Src/freertos.c **** 
 126:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
 127:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
 128:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
 129:Core/Src/freertos.c **** 
 130:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
 131:Core/Src/freertos.c **** {
 132:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 133:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
ARM GAS  C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s 			page 4


 134:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 135:Core/Src/freertos.c ****   /* place for user code */
 136:Core/Src/freertos.c **** }
 137:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 138:Core/Src/freertos.c **** 
 139:Core/Src/freertos.c **** /* USER CODE BEGIN GET_TIMER_TASK_MEMORY */
 140:Core/Src/freertos.c **** static StaticTask_t xTimerTaskTCBBuffer;
 141:Core/Src/freertos.c **** static StackType_t xTimerStack[configTIMER_TASK_STACK_DEPTH];
 142:Core/Src/freertos.c **** 
 143:Core/Src/freertos.c **** void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTa
 144:Core/Src/freertos.c **** {
 145:Core/Src/freertos.c ****   *ppxTimerTaskTCBBuffer = &xTimerTaskTCBBuffer;
 146:Core/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &xTimerStack[0];
 147:Core/Src/freertos.c ****   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 148:Core/Src/freertos.c ****   /* place for user code */
 149:Core/Src/freertos.c **** }
 150:Core/Src/freertos.c **** /* USER CODE END GET_TIMER_TASK_MEMORY */
 151:Core/Src/freertos.c **** 
 152:Core/Src/freertos.c **** /**
 153:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
 154:Core/Src/freertos.c ****   * @param  None
 155:Core/Src/freertos.c ****   * @retval None
 156:Core/Src/freertos.c ****   */
 157:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
 158:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 159:Core/Src/freertos.c **** 
 160:Core/Src/freertos.c ****   /* USER CODE END Init */
 161:Core/Src/freertos.c **** 
 162:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 163:Core/Src/freertos.c ****   /* add mutexes, ... */
 164:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 165:Core/Src/freertos.c **** 
 166:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 167:Core/Src/freertos.c ****   /* add semaphores, ... */
 168:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 169:Core/Src/freertos.c **** 
 170:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 171:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 172:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 173:Core/Src/freertos.c **** 
 174:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 175:Core/Src/freertos.c ****   /* add queues, ... */
 176:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 177:Core/Src/freertos.c **** 
 178:Core/Src/freertos.c ****   /* Create the thread(s) */
 179:Core/Src/freertos.c ****   /* definition and creation of defaultTask */
 180:Core/Src/freertos.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 181:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 182:Core/Src/freertos.c **** 
 183:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 184:Core/Src/freertos.c ****   /* add threads, ... */
 185:Core/Src/freertos.c ****   osThreadDef(appTestTask, testTask, osPriorityNormal, 0, 1024);
 186:Core/Src/freertos.c ****   appTestTaskHandle = osThreadCreate(osThread(appTestTask), NULL);
 187:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 188:Core/Src/freertos.c **** 
 189:Core/Src/freertos.c **** }
 190:Core/Src/freertos.c **** 
ARM GAS  C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s 			page 5


 191:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 192:Core/Src/freertos.c **** /**
 193:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 194:Core/Src/freertos.c ****   * @param  argument: Not used
 195:Core/Src/freertos.c ****   * @retval None
 196:Core/Src/freertos.c ****   */
 197:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 198:Core/Src/freertos.c **** void StartDefaultTask(void const * argument)
 199:Core/Src/freertos.c **** {
  36              		.loc 1 199 1 view -0
  37              		.cfi_startproc
  38              		@ Volatile: function does not return.
  39              		@ args = 0, pretend = 0, frame = 0
  40              		@ frame_needed = 0, uses_anonymous_args = 0
  41              	.LVL0:
  42              		.loc 1 199 1 is_stmt 0 view .LVU1
  43 0000 08B5     		push	{r3, lr}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 3, -8
  47              		.cfi_offset 14, -4
  48              	.LVL1:
  49              	.L2:
 200:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 201:Core/Src/freertos.c ****   /* Infinite loop */
 202:Core/Src/freertos.c ****   for(;;)
  50              		.loc 1 202 3 is_stmt 1 discriminator 1 view .LVU2
 203:Core/Src/freertos.c ****   {
 204:Core/Src/freertos.c ****     osDelay(1);
  51              		.loc 1 204 5 discriminator 1 view .LVU3
  52 0002 0120     		movs	r0, #1
  53 0004 FFF7FEFF 		bl	osDelay
  54              	.LVL2:
 202:Core/Src/freertos.c ****   {
  55              		.loc 1 202 8 discriminator 1 view .LVU4
  56 0008 FBE7     		b	.L2
  57              		.cfi_endproc
  58              	.LFE144:
  60              		.section	.text.testTask,"ax",%progbits
  61              		.align	1
  62              		.global	testTask
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  67              	testTask:
  68              	.LVL3:
  69              	.LFB145:
 205:Core/Src/freertos.c ****   }
 206:Core/Src/freertos.c ****   /* USER CODE END StartDefaultTask */
 207:Core/Src/freertos.c **** }
 208:Core/Src/freertos.c **** 
 209:Core/Src/freertos.c **** /* Private application code --------------------------------------------------*/
 210:Core/Src/freertos.c **** /* USER CODE BEGIN Application */
 211:Core/Src/freertos.c **** 
 212:Core/Src/freertos.c **** void testTask (void const * arg)
 213:Core/Src/freertos.c **** {
  70              		.loc 1 213 1 view -0
ARM GAS  C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s 			page 6


  71              		.cfi_startproc
  72              		@ Volatile: function does not return.
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		.loc 1 213 1 is_stmt 0 view .LVU6
  76 0000 08B5     		push	{r3, lr}
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 3, -8
  80              		.cfi_offset 14, -4
 214:Core/Src/freertos.c ****   UNUSED(arg);
  81              		.loc 1 214 3 is_stmt 1 view .LVU7
 215:Core/Src/freertos.c ****  AppTest_TMC8462A_Init();
  82              		.loc 1 215 2 view .LVU8
  83 0002 FFF7FEFF 		bl	AppTest_TMC8462A_Init
  84              	.LVL4:
  85              	.L5:
 216:Core/Src/freertos.c **** 
 217:Core/Src/freertos.c ****   for (;;)
  86              		.loc 1 217 3 discriminator 1 view .LVU9
 218:Core/Src/freertos.c ****   {
 219:Core/Src/freertos.c **** //    AppTest_TMC8462A_MainFunction();
 220:Core/Src/freertos.c **** 
 221:Core/Src/freertos.c ****     /* Delay 1 second. */
 222:Core/Src/freertos.c ****     osDelay(1000);
  87              		.loc 1 222 5 discriminator 1 view .LVU10
  88 0006 4FF47A70 		mov	r0, #1000
  89 000a FFF7FEFF 		bl	osDelay
  90              	.LVL5:
 217:Core/Src/freertos.c ****   {
  91              		.loc 1 217 9 discriminator 1 view .LVU11
  92 000e FAE7     		b	.L5
  93              		.cfi_endproc
  94              	.LFE145:
  96              		.section	.text.configureTimerForRunTimeStats,"ax",%progbits
  97              		.align	1
  98              		.weak	configureTimerForRunTimeStats
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 103              	configureTimerForRunTimeStats:
 104              	.LFB135:
  80:Core/Src/freertos.c **** 
 105              		.loc 1 80 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
  82:Core/Src/freertos.c **** 
 110              		.loc 1 82 1 view .LVU13
 111 0000 7047     		bx	lr
 112              		.cfi_endproc
 113              	.LFE135:
 115              		.section	.text.getRunTimeCounterValue,"ax",%progbits
 116              		.align	1
 117              		.weak	getRunTimeCounterValue
 118              		.syntax unified
ARM GAS  C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s 			page 7


 119              		.thumb
 120              		.thumb_func
 122              	getRunTimeCounterValue:
 123              	.LFB136:
  85:Core/Src/freertos.c **** return 0;
 124              		.loc 1 85 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
  86:Core/Src/freertos.c **** }
 129              		.loc 1 86 1 view .LVU15
  87:Core/Src/freertos.c **** /* USER CODE END 1 */
 130              		.loc 1 87 1 is_stmt 0 view .LVU16
 131 0000 0020     		movs	r0, #0
 132 0002 7047     		bx	lr
 133              		.cfi_endproc
 134              	.LFE136:
 136              		.section	.text.vApplicationIdleHook,"ax",%progbits
 137              		.align	1
 138              		.weak	vApplicationIdleHook
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	vApplicationIdleHook:
 144              	.LFB137:
  92:Core/Src/freertos.c ****    /* vApplicationIdleHook() will only be called if configUSE_IDLE_HOOK is set
 145              		.loc 1 92 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 102:Core/Src/freertos.c **** /* USER CODE END 2 */
 150              		.loc 1 102 1 view .LVU18
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE137:
 155              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 156              		.align	1
 157              		.weak	vApplicationStackOverflowHook
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 162              	vApplicationStackOverflowHook:
 163              	.LVL6:
 164              	.LFB138:
 107:Core/Src/freertos.c ****    /* Run time stack overflow checking is performed if
 165              		.loc 1 107 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 111:Core/Src/freertos.c **** /* USER CODE END 4 */
 170              		.loc 1 111 1 view .LVU20
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE138:
ARM GAS  C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s 			page 8


 175              		.section	.text.PreSleepProcessing,"ax",%progbits
 176              		.align	1
 177              		.weak	PreSleepProcessing
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 182              	PreSleepProcessing:
 183              	.LVL7:
 184              	.LFB139:
 116:Core/Src/freertos.c **** /* place for user code */
 185              		.loc 1 116 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 118:Core/Src/freertos.c **** 
 190              		.loc 1 118 1 view .LVU22
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE139:
 195              		.section	.text.PostSleepProcessing,"ax",%progbits
 196              		.align	1
 197              		.weak	PostSleepProcessing
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 202              	PostSleepProcessing:
 203              	.LVL8:
 204              	.LFB140:
 121:Core/Src/freertos.c **** /* place for user code */
 205              		.loc 1 121 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 123:Core/Src/freertos.c **** /* USER CODE END PREPOSTSLEEP */
 210              		.loc 1 123 1 view .LVU24
 211 0000 7047     		bx	lr
 212              		.cfi_endproc
 213              	.LFE140:
 215              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
 216              		.align	1
 217              		.global	vApplicationGetIdleTaskMemory
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 222              	vApplicationGetIdleTaskMemory:
 223              	.LVL9:
 224              	.LFB141:
 131:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 225              		.loc 1 131 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 132:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 230              		.loc 1 132 3 view .LVU26
ARM GAS  C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s 			page 9


 132:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 231              		.loc 1 132 25 is_stmt 0 view .LVU27
 232 0000 034B     		ldr	r3, .L14
 233 0002 0360     		str	r3, [r0]
 133:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 234              		.loc 1 133 3 is_stmt 1 view .LVU28
 133:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 235              		.loc 1 133 27 is_stmt 0 view .LVU29
 236 0004 034B     		ldr	r3, .L14+4
 237 0006 0B60     		str	r3, [r1]
 134:Core/Src/freertos.c ****   /* place for user code */
 238              		.loc 1 134 3 is_stmt 1 view .LVU30
 134:Core/Src/freertos.c ****   /* place for user code */
 239              		.loc 1 134 25 is_stmt 0 view .LVU31
 240 0008 8023     		movs	r3, #128
 241 000a 1360     		str	r3, [r2]
 136:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 242              		.loc 1 136 1 view .LVU32
 243 000c 7047     		bx	lr
 244              	.L15:
 245 000e 00BF     		.align	2
 246              	.L14:
 247 0010 00000000 		.word	.LANCHOR0
 248 0014 00000000 		.word	.LANCHOR1
 249              		.cfi_endproc
 250              	.LFE141:
 252              		.section	.text.vApplicationGetTimerTaskMemory,"ax",%progbits
 253              		.align	1
 254              		.global	vApplicationGetTimerTaskMemory
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 259              	vApplicationGetTimerTaskMemory:
 260              	.LVL10:
 261              	.LFB142:
 144:Core/Src/freertos.c ****   *ppxTimerTaskTCBBuffer = &xTimerTaskTCBBuffer;
 262              		.loc 1 144 1 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 145:Core/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &xTimerStack[0];
 267              		.loc 1 145 3 view .LVU34
 145:Core/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &xTimerStack[0];
 268              		.loc 1 145 26 is_stmt 0 view .LVU35
 269 0000 034B     		ldr	r3, .L17
 270 0002 0360     		str	r3, [r0]
 146:Core/Src/freertos.c ****   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 271              		.loc 1 146 3 is_stmt 1 view .LVU36
 146:Core/Src/freertos.c ****   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 272              		.loc 1 146 28 is_stmt 0 view .LVU37
 273 0004 034B     		ldr	r3, .L17+4
 274 0006 0B60     		str	r3, [r1]
 147:Core/Src/freertos.c ****   /* place for user code */
 275              		.loc 1 147 3 is_stmt 1 view .LVU38
 147:Core/Src/freertos.c ****   /* place for user code */
 276              		.loc 1 147 26 is_stmt 0 view .LVU39
ARM GAS  C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s 			page 10


 277 0008 4FF48073 		mov	r3, #256
 278 000c 1360     		str	r3, [r2]
 149:Core/Src/freertos.c **** /* USER CODE END GET_TIMER_TASK_MEMORY */
 279              		.loc 1 149 1 view .LVU40
 280 000e 7047     		bx	lr
 281              	.L18:
 282              		.align	2
 283              	.L17:
 284 0010 00000000 		.word	.LANCHOR2
 285 0014 00000000 		.word	.LANCHOR3
 286              		.cfi_endproc
 287              	.LFE142:
 289              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 290              		.align	1
 291              		.global	MX_FREERTOS_Init
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 296              	MX_FREERTOS_Init:
 297              	.LFB143:
 157:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 298              		.loc 1 157 29 is_stmt 1 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 56
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302 0000 10B5     		push	{r4, lr}
 303              	.LCFI2:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 4, -8
 306              		.cfi_offset 14, -4
 307 0002 8EB0     		sub	sp, sp, #56
 308              	.LCFI3:
 309              		.cfi_def_cfa_offset 64
 180:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 310              		.loc 1 180 3 view .LVU42
 311 0004 124C     		ldr	r4, .L21
 312 0006 0DF11C0C 		add	ip, sp, #28
 313 000a A646     		mov	lr, r4
 314 000c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 315 0010 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 316 0014 9EE80700 		ldm	lr, {r0, r1, r2}
 317 0018 8CE80700 		stm	ip, {r0, r1, r2}
 181:Core/Src/freertos.c **** 
 318              		.loc 1 181 3 view .LVU43
 181:Core/Src/freertos.c **** 
 319              		.loc 1 181 23 is_stmt 0 view .LVU44
 320 001c 0021     		movs	r1, #0
 321 001e 07A8     		add	r0, sp, #28
 322 0020 FFF7FEFF 		bl	osThreadCreate
 323              	.LVL11:
 181:Core/Src/freertos.c **** 
 324              		.loc 1 181 21 view .LVU45
 325 0024 0B4B     		ldr	r3, .L21+4
 326 0026 1860     		str	r0, [r3]
 185:Core/Src/freertos.c ****   appTestTaskHandle = osThreadCreate(osThread(appTestTask), NULL);
 327              		.loc 1 185 3 is_stmt 1 view .LVU46
 328 0028 EE46     		mov	lr, sp
ARM GAS  C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s 			page 11


 329 002a 04F11C0C 		add	ip, r4, #28
 330 002e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 331 0032 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 332 0036 9CE80700 		ldm	ip, {r0, r1, r2}
 333 003a 8EE80700 		stm	lr, {r0, r1, r2}
 186:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 334              		.loc 1 186 3 view .LVU47
 186:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 335              		.loc 1 186 23 is_stmt 0 view .LVU48
 336 003e 0021     		movs	r1, #0
 337 0040 6846     		mov	r0, sp
 338 0042 FFF7FEFF 		bl	osThreadCreate
 339              	.LVL12:
 186:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 340              		.loc 1 186 21 view .LVU49
 341 0046 044B     		ldr	r3, .L21+8
 342 0048 1860     		str	r0, [r3]
 189:Core/Src/freertos.c **** 
 343              		.loc 1 189 1 view .LVU50
 344 004a 0EB0     		add	sp, sp, #56
 345              	.LCFI4:
 346              		.cfi_def_cfa_offset 8
 347              		@ sp needed
 348 004c 10BD     		pop	{r4, pc}
 349              	.L22:
 350 004e 00BF     		.align	2
 351              	.L21:
 352 0050 00000000 		.word	.LANCHOR4
 353 0054 00000000 		.word	.LANCHOR5
 354 0058 00000000 		.word	.LANCHOR6
 355              		.cfi_endproc
 356              	.LFE143:
 358              		.global	defaultTaskHandle
 359              		.global	appTestTaskHandle
 360              		.section	.rodata
 361              		.align	2
 362              		.set	.LANCHOR4,. + 0
 363              	.LC4:
 364 0000 00000000 		.word	.LC0
 365 0004 00000000 		.word	StartDefaultTask
 366 0008 0000     		.short	0
 367 000a 0000     		.space	2
 368 000c 00000000 		.word	0
 369 0010 80000000 		.word	128
 370 0014 00000000 		.word	0
 371 0018 00000000 		.word	0
 372              	.LC5:
 373 001c 0C000000 		.word	.LC2
 374 0020 00000000 		.word	testTask
 375 0024 0000     		.short	0
 376 0026 0000     		.space	2
 377 0028 00000000 		.word	0
 378 002c 00040000 		.word	1024
 379 0030 00000000 		.word	0
 380 0034 00000000 		.word	0
 381              		.section	.bss.appTestTaskHandle,"aw",%nobits
 382              		.align	2
ARM GAS  C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s 			page 12


 383              		.set	.LANCHOR6,. + 0
 386              	appTestTaskHandle:
 387 0000 00000000 		.space	4
 388              		.section	.bss.defaultTaskHandle,"aw",%nobits
 389              		.align	2
 390              		.set	.LANCHOR5,. + 0
 393              	defaultTaskHandle:
 394 0000 00000000 		.space	4
 395              		.section	.bss.xIdleStack,"aw",%nobits
 396              		.align	2
 397              		.set	.LANCHOR1,. + 0
 400              	xIdleStack:
 401 0000 00000000 		.space	512
 401      00000000 
 401      00000000 
 401      00000000 
 401      00000000 
 402              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 403              		.align	2
 404              		.set	.LANCHOR0,. + 0
 407              	xIdleTaskTCBBuffer:
 408 0000 00000000 		.space	88
 408      00000000 
 408      00000000 
 408      00000000 
 408      00000000 
 409              		.section	.bss.xTimerStack,"aw",%nobits
 410              		.align	2
 411              		.set	.LANCHOR3,. + 0
 414              	xTimerStack:
 415 0000 00000000 		.space	1024
 415      00000000 
 415      00000000 
 415      00000000 
 415      00000000 
 416              		.section	.bss.xTimerTaskTCBBuffer,"aw",%nobits
 417              		.align	2
 418              		.set	.LANCHOR2,. + 0
 421              	xTimerTaskTCBBuffer:
 422 0000 00000000 		.space	88
 422      00000000 
 422      00000000 
 422      00000000 
 422      00000000 
 423              		.text
 424              	.Letext0:
 425              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 426              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 427              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 428              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 429              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 430              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 431              		.file 8 "Application/AppsTest/TMC_Test/appTest_tmc8462a.h"
ARM GAS  C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:17     .rodata.str1.4:00000000 $d
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:27     .text.StartDefaultTask:00000000 $t
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:33     .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:61     .text.testTask:00000000 $t
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:67     .text.testTask:00000000 testTask
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:97     .text.configureTimerForRunTimeStats:00000000 $t
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:103    .text.configureTimerForRunTimeStats:00000000 configureTimerForRunTimeStats
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:116    .text.getRunTimeCounterValue:00000000 $t
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:122    .text.getRunTimeCounterValue:00000000 getRunTimeCounterValue
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:137    .text.vApplicationIdleHook:00000000 $t
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:143    .text.vApplicationIdleHook:00000000 vApplicationIdleHook
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:156    .text.vApplicationStackOverflowHook:00000000 $t
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:162    .text.vApplicationStackOverflowHook:00000000 vApplicationStackOverflowHook
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:176    .text.PreSleepProcessing:00000000 $t
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:182    .text.PreSleepProcessing:00000000 PreSleepProcessing
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:196    .text.PostSleepProcessing:00000000 $t
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:202    .text.PostSleepProcessing:00000000 PostSleepProcessing
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:216    .text.vApplicationGetIdleTaskMemory:00000000 $t
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:222    .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:247    .text.vApplicationGetIdleTaskMemory:00000010 $d
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:253    .text.vApplicationGetTimerTaskMemory:00000000 $t
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:259    .text.vApplicationGetTimerTaskMemory:00000000 vApplicationGetTimerTaskMemory
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:284    .text.vApplicationGetTimerTaskMemory:00000010 $d
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:290    .text.MX_FREERTOS_Init:00000000 $t
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:296    .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:352    .text.MX_FREERTOS_Init:00000050 $d
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:393    .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:386    .bss.appTestTaskHandle:00000000 appTestTaskHandle
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:361    .rodata:00000000 $d
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:382    .bss.appTestTaskHandle:00000000 $d
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:389    .bss.defaultTaskHandle:00000000 $d
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:396    .bss.xIdleStack:00000000 $d
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:400    .bss.xIdleStack:00000000 xIdleStack
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:403    .bss.xIdleTaskTCBBuffer:00000000 $d
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:407    .bss.xIdleTaskTCBBuffer:00000000 xIdleTaskTCBBuffer
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:410    .bss.xTimerStack:00000000 $d
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:414    .bss.xTimerStack:00000000 xTimerStack
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:417    .bss.xTimerTaskTCBBuffer:00000000 $d
C:\Users\minhp\AppData\Local\Temp\ccCI0Wn9.s:421    .bss.xTimerTaskTCBBuffer:00000000 xTimerTaskTCBBuffer

UNDEFINED SYMBOLS
osDelay
AppTest_TMC8462A_Init
osThreadCreate
