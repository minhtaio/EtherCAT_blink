.DEFAULT_GOAL := help

.PHONY: help default install uninstall build rebuild clean distclean modules modules_build modules_install autoconf conf

# # help is defined in 
# # https://gist.github.com/rcmachado/af3db315e31383502660
help:
	$(info --------------------------------------- )	
	$(info Available targets)
	$(info --------------------------------------- )
	$(QUIET) awk '/^[a-zA-Z\-\_0-9]+:/ {            \
	  nb = sub( /^## /, "", helpMsg );              \
	  if(nb == 0) {                                 \
	    helpMsg = $$0;                              \
	    nb = sub( /^[^:]*:.* ## /, "", helpMsg );   \
	  }                                             \
	  if (nb)                                       \
	    print  $$1 "\t" helpMsg;                    \
	}                                               \
	{ helpMsg = $$0 }'                              \
	$(MAKEFILE_LIST) | column -ts:	


default: help

## Install EtherCAT Master Library, Header Files, and Program
install: 
	$(QUIET) $(SUDOBASH) '$(E3_MODULE_MAKE_CMDS) install'

## Uninstall EtherCAT Master Library, Header Files, and Program
uninstall: conf
	$(QUIET) $(SUDOBASH) '$(E3_MODULE_MAKE_CMDS) uninstall'


# Build always the Module with the EPICS_MODULES_TAG
## Build EtherCAT Master Library and Program
build: autoconf
	$(QUIET) $(E3_MODULE_MAKE_CMDS) build


## Clean, build, and install
rebuild: clean build install


## Clean EtherCAT Master Library, Header Files, and Program
clean: conf
	$(QUIET) $(E3_MODULE_MAKE_CMDS) clean

## Distclean 
distclean: clean
	rm -rf $(E3_MODULE_SRC_PATH)	

## Standard kernel compilation (Please use dkms) 
modules: conf
	$(QUIET) $(E3_MODULE_MAKE_CMDS) modules


modules_clean:
	$(QUIET)  $(SUDO2) '$(E3_MODULE_MAKE_CMDS) modules clean'

# always sudo is needed
modules_install:
	$(QUIET) $(SUDO2) '$(E3_MODULE_MAKE_CMDS) modules_install'

modules_uninstall:
	$(QUIET) $(SUDO2) '$(E3_MODULE_MAKE_CMDS) modules_uninstall'	




## Autoconf on E3_MODULE_SRC_PATH
autoconf: conf
	$(QUIET) $(E3_MODULE_MAKE_CMDS) autoconf


conf:
	$(QUIET) install -m 644 $(TOP)/$(E3_MODULE_MAKEFILE)  $(E3_MODULE_SRC_PATH)/


.PHONY: dkms_add dkms_remove dkms_build dkms_install dkms_uninstall

## dkms_add
dkms_add:  dkmsconf conf
	$(QUIET) $(SUDO2) 'install -m 755 -d  /usr/src/$(E3_MODULE_NAME)-$(E3_MODULE_VERSION)'
	$(QUIET) $(SUDO2) 'cp -r $(TOP)/$(E3_MODULE_SRC_PATH)/* /usr/src/$(E3_MODULE_NAME)-$(E3_MODULE_VERSION)/'
	$(QUIET) $(SUDOBASH) '$(E3_MODULE_MAKE_CMDS) dkms_add'
## dkms_remove
dkms_remove: conf
	$(QUIET) $(SUDOBASH) '$(E3_MODULE_MAKE_CMDS) dkms_remove'
ifneq ($(wildcard /usr/src/$(E3_MODULE_NAME)-$(E3_MODULE_VERSION)/.*),)
	$(QUIET) $(SUDO2) 'rm -rf /usr/src/$(E3_MODULE_NAME)-$(E3_MODULE_VERSION)/'
endif

## dkms_build
dkms_build:
	$(QUIET) $(SUDO2) '$(E3_MODULE_MAKE_CMDS) dkms_build'

## dkms_install
dkms_install:
	$(QUIET) $(SUDOBASH) '$(E3_MODULE_MAKE_CMDS) dkms_install'

## dkms_uninstall
dkms_uninstall:
	$(QUIET) $(SUDOBASH) '$(E3_MODULE_MAKE_CMDS) dkms_uninstall'



.PHONY: setup setup_clean



## Configuration for EtherCAT Master (systemd, ethercat.conf, and others)
setup:
	$(QUIET) bash $(TOP)/scripts/etherlab_setup.bash -t $(E3_ETHERLAB_INSTALL_LOCATION)

## Clean up the configuration for EtherCAT Master (systemd, ethercat.conf, and others)
setup_clean:
	$(QUIET) bash $(TOP)/scripts/etherlab_setup_clean.bash


.PHONY: init deinit hg_update_rev

## Cloning the EtherCAT Master Source and Change it to the Specific Revision
ifeq ($(WITH_PATCHSET),NO)
init:
ifneq ($(wildcard $(E3_MODULE_SRC_PATH)/.*),)
	#
	$(QUIET) echo "$(E3_MODULE_SRC_PATH) exists already."
	$(QUIET) echo "Please do make deinit first if one would like to init."
	#
else
ifneq (, $(HG_CMD))
	hg clone http://hg.code.sf.net/p/etherlabmaster/code $(E3_MODULE_SRC_PATH) -r $(E3_ETHERLAB_BRANCH)
	$(QUIET)cd $(E3_MODULE_SRC_PATH) && hg update -r $(EPICS_MODULE_TAG)
	$(QUIET)cd $(E3_MODULE_SRC_PATH) && hg id -nib
	$(MAKE) patch
else
	$(QUIET)echo ""
	# -----------------------------------------------------------------------
	# >>>>  Please install mercurial, hg is needed to download sources   <<<<
	# -----------------------------------------------------------------------	
endif
endif
#
else # ifeq ($(WITH_PATCHSET),NO)
init:
	$(QUIET)echo ""
	# Please set WITH_PATCHSET=NO within configure/CONFIG_OPTIONS via
	# echo "WITH_PATCHSET=NO" >> configure/CONFIG_OPTIONS.local
	$(QUIET)echo ""
endif # ifeq ($(WITH_PATCHSET),NO)


## Remove clone source files
deinit:
ifneq ($(wildcard $(E3_MODULE_SRC_PATH)/.*),)
	rm -rf $(E3_MODULE_SRC_PATH)
endif
	
hg_update_rev:
ifneq (, $(HG_CMD))
	$(QUIET)cd $(E3_MODULE_SRC_PATH) && hg update -r $(EPICS_MODULE_TAG)
	$(QUIET)cd $(E3_MODULE_SRC_PATH) && hg id -nib
else
	$(QUIET)echo ""
	# -----------------------------------------------------------------------
	# >>>>  Please install mercurial, hg is needed to download sources   <<<<
	# -----------------------------------------------------------------------
endif
